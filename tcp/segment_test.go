package tcp

import (
	"testing"
)

func TestBreakIntoSegments(t *testing.T) {
	segments := BreakIntoSegments("foo")
	if len(segments) != 1 {
		t.Fatal("wrong length", len(segments))
	}

	// with 600 length
	segments = BreakIntoSegments("012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789")
	if len(segments) != 2 {
		t.Fatal("wrong length", len(segments))
	}
	if len(segments[0]) != MAX_SEGMENT_SIZE {
		t.Fatal("wrong length", len(segments[0]))
	}
	if len(segments[1]) != 88 {
		t.Fatal("wrong length", len(segments[1]))
	}

	// with 1200 length
	segments = BreakIntoSegments("012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789")
	if len(segments) != 3 {
		t.Fatal("wrong length", len(segments))
	}
	if len(segments[0]) != MAX_SEGMENT_SIZE {
		t.Fatal("wrong length", len(segments[0]))
	}
	if len(segments[1]) != MAX_SEGMENT_SIZE {
		t.Fatal("wrong length", len(segments[1]))
	}
	if len(segments[2]) != 176 {
		t.Fatal("wrong length", len(segments[2]))
	}
}
